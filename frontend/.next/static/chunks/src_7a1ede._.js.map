{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ddtre/Documents/Development/Ai-Classifier/bookly-ai/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ddtre/Documents/Development/Ai-Classifier/bookly-ai/frontend/src/components/ui/animated-grid-pattern.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useId, useRef, useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface GridPatternProps {\n  width?: number;\n  height?: number;\n  x?: number;\n  y?: number;\n  strokeDasharray?: any;\n  numSquares?: number;\n  className?: string;\n  maxOpacity?: number;\n  duration?: number;\n  repeatDelay?: number;\n}\n\nexport function GridPattern({\n  width = 40,\n  height = 40,\n  x = -1,\n  y = -1,\n  strokeDasharray = 0,\n  numSquares = 50,\n  className,\n  maxOpacity = 0.5,\n  duration = 4,\n  repeatDelay = 0.5,\n  ...props\n}: GridPatternProps) {\n  const id = useId();\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [squares, setSquares] = useState(() => generateSquares(numSquares));\n\n  function getPos() {\n    return [\n      Math.floor((Math.random() * dimensions.width) / width),\n      Math.floor((Math.random() * dimensions.height) / height),\n    ];\n  }\n\n  // Adjust the generateSquares function to return objects with an id, x, and y\n  function generateSquares(count: number) {\n    return Array.from({ length: count }, (_, i) => ({\n      id: i,\n      pos: getPos(),\n    }));\n  }\n\n  // Function to update a single square's position\n  const updateSquarePosition = (id: number) => {\n    setSquares((currentSquares) =>\n      currentSquares.map((sq) =>\n        sq.id === id\n          ? {\n              ...sq,\n              pos: getPos(),\n            }\n          : sq,\n      ),\n    );\n  };\n\n  // Update squares to animate in\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) {\n      setSquares(generateSquares(numSquares));\n    }\n  }, [dimensions, numSquares]);\n\n  // Resize observer to update container dimensions\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        setDimensions({\n          width: entry.contentRect.width,\n          height: entry.contentRect.height,\n        });\n      }\n    });\n\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => {\n      if (containerRef.current) {\n        resizeObserver.unobserve(containerRef.current);\n      }\n    };\n  }, [containerRef]);\n\n  return (\n    <svg\n      ref={containerRef}\n      aria-hidden=\"true\"\n      className={cn(\n        \"pointer-events-none absolute inset-0 h-full w-full fill-purple-500 bg-black\",\n        className,\n      )}\n      {...props}\n    >\n      <defs>\n        <pattern\n          id={id}\n          width={width}\n          height={height}\n          patternUnits=\"userSpaceOnUse\"\n          x={x}\n          y={y}\n        >\n          <path\n            d={`M.5 ${height}V.5H${width}`}\n            fill=\"none\"\n            strokeDasharray={strokeDasharray}\n          />\n        </pattern>\n      </defs>\n      <rect width=\"100%\" height=\"100%\" fill={`url(#${id})`} />\n      <svg x={x} y={y} className=\"overflow-visible\">\n        {squares.map(({ pos: [x, y], id }, index) => (\n          <motion.rect\n            initial={{ opacity: 0 }}\n            animate={{ opacity: maxOpacity }}\n            transition={{\n              duration,\n              repeat: 1,\n              delay: index * 0.1,\n              repeatType: \"reverse\",\n            }}\n            onAnimationComplete={() => updateSquarePosition(id)}\n            key={`${x}-${y}-${index}`}\n            width={width - 1}\n            height={height - 1}\n            x={x * width + 1}\n            y={y * height + 1}\n            fill=\"purple-700\"\n            strokeWidth=\"0\"\n          />\n        ))}\n      </svg>\n    </svg>\n  );\n}\n\nexport default GridPattern;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ddtre/Documents/Development/Ai-Classifier/bookly-ai/frontend/src/components/classifier-comps/book-info-card.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {motion} from 'framer-motion';\r\n\r\ninterface BookInfoContainerProps {\r\n    data: JSON;\r\n}\r\n\r\nconst BookInfoCard = (data)  => {\r\n    return (\r\n        <motion.div\r\n            className=\"reminder-card border-2 p-4 rounded-lg shadow-md\"\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -20 }}\r\n            transition={{ duration: 0.5 }}\r\n        >\r\n            <h3>{data.name}</h3>\r\n            <p>{data.genre}</p>\r\n            <p>{data.author}</p>\r\n            <p>{data.description}</p>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default BookInfoCard\r\n\r\n"],"names":[],"mappings":";;;;AACA;;;AAMA,MAAM,eAAe,CAAC;IAClB,qBACI,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACP,WAAU;QACV,SAAS;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC9B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,MAAM;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC3B,YAAY;YAAE,UAAU;QAAI;;0BAE5B,6LAAC;0BAAI,KAAK,IAAI;;;;;;0BACd,6LAAC;0BAAG,KAAK,KAAK;;;;;;0BACd,6LAAC;0BAAG,KAAK,MAAM;;;;;;0BACf,6LAAC;0BAAG,KAAK,WAAW;;;;;;;;;;;;AAGhC;KAfM;uCAiBS"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ddtre/Documents/Development/Ai-Classifier/bookly-ai/frontend/src/components/classifier-comps/camera-utils.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, {useRef, useState, createContext, useContext} from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport BookInfoContainerProps from './book-info-card';\r\n\r\nconst videoConstraints = {\r\n    width: 1080,\r\n    height: 720,\r\n    facingMode: \"user\"\r\n};\r\n\r\nconst Camera = () => {\r\n    const webcamRef = useRef<Webcam>(null);\r\n    const [data, setData] = useState(null);\r\n\r\n    const capture = React.useCallback(() => {\r\n        if (webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            console.log(imageSrc);\r\n            return imageSrc\r\n        }\r\n    },\r\n        [webcamRef]\r\n    );\r\n\r\n    const getData = () => {\r\n        const imageSrc: String | null | undefined = capture();\r\n        if (imageSrc) {\r\n            console.log(imageSrc);\r\n            fetch('http://127.0.0.1:8000/classification/classify-book', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ image_path: imageSrc }),\r\n            })\r\n                .then(response => {\r\n                    console.log(response.status)\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n                    console.log(data)\r\n                    setData(data)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            <Webcam\r\n                audio={false}\r\n                height={720}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={1280}\r\n                videoConstraints={videoConstraints}\r\n                className=\"mb-4\"\r\n            />\r\n            <button\r\n                onClick={getData}\r\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n            >\r\n                Capture\r\n            </button>\r\n\r\n            <BookInfoContainerProps  data={data} />\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Camera;\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,mBAAmB;IACrB,OAAO;IACP,QAAQ;IACR,YAAY;AAChB;AAEA,MAAM,SAAS;;IACX,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAU;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,UAAU,6JAAA,CAAA,UAAK,CAAC,WAAW,CAAC;QAC9B,IAAI,UAAU,OAAO,EAAE;YACnB,MAAM,WAAW,UAAU,OAAO,CAAC,aAAa;YAChD,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX;IACJ,GACI;QAAC;KAAU;IAGf,MAAM,UAAU;QACZ,MAAM,WAAsC;QAC5C,IAAI,UAAU;YACV,QAAQ,GAAG,CAAC;YACZ,MAAM,sDAAsD;gBACxD,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,YAAY;gBAAS;YAChD,GACK,IAAI,CAAC,CAAA;gBACF,QAAQ,GAAG,CAAC,SAAS,MAAM;gBAC3B,OAAO,SAAS,IAAI;YACxB,GACC,IAAI,CAAC,CAAA;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ;YACZ;QACR;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC,6JAAA,CAAA,UAAM;gBACH,OAAO;gBACP,QAAQ;gBACR,KAAK;gBACL,kBAAiB;gBACjB,OAAO;gBACP,kBAAkB;gBAClB,WAAU;;;;;;0BAEd,6LAAC;gBACG,SAAS;gBACT,WAAU;0BACb;;;;;;0BAID,6LAAC,oKAAA,CAAA,UAAsB;gBAAE,MAAM;;;;;;;;;;;;AAK3C;GA3DM;KAAA;uCA6DS"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}