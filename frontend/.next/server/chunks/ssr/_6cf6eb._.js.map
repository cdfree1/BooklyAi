{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/camera-comps/index.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst CameraComponent: React.FC<{ videoRef: React.RefObject<HTMLVideoElement> }> = ({ videoRef }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const [photo, setPhoto] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera: \", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      const stream = videoRef.current?.srcObject as MediaStream;\r\n      stream?.getTracks().forEach((track) => track.stop());\r\n    };\r\n  }, [videoRef]);\r\n\r\n  const takePicture = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      if (context) {\r\n        context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n        setPhoto(canvas.toDataURL('image/png'));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} autoPlay playsInline style={{ width: '100%' }} />\r\n      <button onClick={takePicture}>Take Picture</button>\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} width={640} height={480}></canvas>\r\n      {photo && <img src={photo} alt=\"Captured photo\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraComponent;"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,kBAA6E,CAAC,EAAE,QAAQ,EAAE;IAC9F,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;oBAAE,OAAO;gBAAK;gBACvE,IAAI,SAAS,OAAO,EAAE;oBACpB,SAAS,OAAO,CAAC,SAAS,GAAG;gBAC/B;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;YAC5C;QACF;QAEA;QAEA,OAAO;YACL,MAAM,SAAS,SAAS,OAAO,EAAE;YACjC,QAAQ,YAAY,QAAQ,CAAC,QAAU,MAAM,IAAI;QACnD;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,cAAc;QAClB,IAAI,SAAS,OAAO,IAAI,UAAU,OAAO,EAAE;YACzC,MAAM,SAAS,UAAU,OAAO;YAChC,MAAM,UAAU,OAAO,UAAU,CAAC;YAClC,IAAI,SAAS;gBACX,QAAQ,SAAS,CAAC,SAAS,OAAO,EAAE,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;gBACrE,SAAS,OAAO,SAAS,CAAC;YAC5B;QACF;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAM,KAAK;gBAAU,QAAQ;gBAAC,WAAW;gBAAC,OAAO;oBAAE,OAAO;gBAAO;;;;;;0BAClE,8OAAC;gBAAO,SAAS;0BAAa;;;;;;0BAC9B,8OAAC;gBAAO,KAAK;gBAAW,OAAO;oBAAE,SAAS;gBAAO;gBAAG,OAAO;gBAAK,QAAQ;;;;;;YACvE,uBAAS,8OAAC;gBAAI,KAAK;gBAAO,KAAI;;;;;;;;;;;;AAGrC;uCAEe"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/ui/animated-grid-pattern.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GridPattern = registerClientReference(\n    function() { throw new Error(\"Attempted to call GridPattern() from the server but GridPattern is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/animated-grid-pattern.tsx <module evaluation>\",\n    \"GridPattern\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ui/animated-grid-pattern.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/animated-grid-pattern.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6EACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/ui/animated-grid-pattern.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const GridPattern = registerClientReference(\n    function() { throw new Error(\"Attempted to call GridPattern() from the server but GridPattern is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/animated-grid-pattern.tsx\",\n    \"GridPattern\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ui/animated-grid-pattern.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/animated-grid-pattern.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yDACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,qCAAoC;gBAElD,UAAA,CAAA;gBAAA,QAAA;oBAAA,IAAA,0BAA4D;oBAAA;iBAAA;YAC5D;SAAA,KAAO,MAAMC,cAAc,IAAIX,mBAAmB;;KAChDY,YAAY;cACVC,IAAAA,EAAMZ;YAAAA,MAAAA,CAAUa,QAAQ;iBACxBC,MAAM,QAAA;wBAAA;4BACNC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,iBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACV,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAA2C,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BAC3CC,MAAAA,CAAAA,KAAY,OAAA,CAAA;;qBACZC,UAAU;gBACVC,UAAU,EAAE;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;UACAC,UAAU,CAAA;YAAA,IAAA;YAAA;SAAA;;OACRC,YAAYnB;IACd,EAAA,QAAA;IAAA;CAAA","ignoreList":[0]}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}